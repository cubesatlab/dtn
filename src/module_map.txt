
Module Map
==========

This file contains a map of module ID numbers and the modules to which they correspond. The
first part of the file shows the "well known" module ID numbers for the various CubedOS core
modules. The second part of the file shows application-specific modules that are numbered by
application developers starting at the "far" end of the mailbox array. For example, if the
mailbox array is configured with a size of 16, the first application-specific module should use
a module ID of 16, then 15, etc. The "gap" between the application-specific IDs and the
well-known IDs can later be closed by reconfiguring the mailbox size to what is precisely
required and rebuilding the application.

Every application should have a copy of this file in its source repository, edited to include
the application-specific module ID assignments.

Core Modules
------------

Core IDs are assigned in decreasing order of generality. Most applications are expected to
require the lower numbered core modules.

1. Name resolver (NOT IMPLEMENTED. Used for dynamic module ID assignments)
2. Log Server (telemetry gathering, general purpose logging)
3. Publish/Subscribe Server (publish/subscribe message passing)
4. Time Server (timing services)
5. Event Server (NOT IMPLEMENTED. Like CFS?)
6. File Server (non-volatile file storage)
7. Table Server (NOT IMPLEMENTED. Like CFS?)


Application-Specific Modules
----------------------------

The problem of assigning IDs to library modules is an open question. Applications that use
multiple libraries will want to ensure no conflict, yet it is unreasonable to require
applications to reserve mailbox slots for libraries that are not used, specially since
application developers can't be expected to know about them all! Dynamic module ID assignment
might be a requirement for third-party library modules, but that is currently not implemented by
CubedOS.

8. DTN.CFDP
